这是我的log，记录我每天遇到的问题。

2014/1/25 周六 21：17 160
    1.ps切图的时候要把psd的设计稿存成png的，然后再用ps打开，切完以后要存成web可用格式（选png-24），要注意透明度的问题。
      这样，之前导航条的问题就解决了。因为之前切的图没有注意透明度这个问题，总也达不到效果。用css3的box-shadow实现的话，在ie下却不行，只有切图会比较好的解决。
    2.还有一个切图的问题，之前实现的一个标签的问题。标签的长度不一样，可以切三部分：左、中、右。
    3.一个关于Chrome浏览器中调试的问题，就是只要console中有报错，就应该注意一下，因为一个js断了，下面的程序就办法执行了，就像今天那个selectize的标签显示不出来的原因。如果不改正，就是在错的基础上改，那情况就比较乱了。还有，说到调试技巧，我之前是没怎么注意过的或者看到了，却想偏了。
    4.今天没有其他问题了。无论如何，这是一个开始。
2014/1/26 周日 21：04 161
    1.在程序中写if和else要考虑的情况比只写if要复杂一点，只写if的话，只要管条件成立的情况，不用再去想条件不成立的情况。
    2.当想要一个元素显示几秒再消失时，可以使用$("element").show(0).delay(num).hide(0)，而且show和hide都要有参数，否则delay不会起作用。delay会把要执行的事件排队，依次执行，因此才会有弹出的一个div显示超出时间很长时间才消失的bug。最后使用.clearQueue()清除还没执行的事件队列。
    3.当需要页面上展示的信息和拿到的数组里的信息不一样，比如数组里的数据是“旅行手记”，想在页面展示“旅游手记”，可以使用{'旅行手记'：'旅游手记'}这种方法来把数据映射过来。
2014/1/27 周一 20：47 162
    1.off()
        描述：移除事件的控制器；
        .off(events[,selector][,handler(eventObject)])：
            events的类型是string，可以是空格隔开的事件类型、可选的命名空间或者命名空间，像"click","keydown.myPlugin"或者".myPlugin"；
            selector类型string，和最初传给.on（）的selector应该相匹配；
            handler(eventObject)类型是F()，在off之前绑定在事件上的控制器，或者特殊的值false。
        .off(events [,selector]):
            events类型PlainObject，字符串键值代表空格隔开的事件类型、可选的命名空间或者命名空间的对象；
            selector类型String和最初传给.on（）的selector应该相匹配。
         .off():
            不接受任何参数。
2014/2/7 周五 21：04 163
    网站的引导涉及到cookie、可能还有自适应、元素的定位、storage等等。只是一个概念，具体的我还没有做过。在这先记录一下。
    Web Storage实际上由两部分组成：sessionStorage与localStorage。 sessionStorage用于本地存储一个会话（session）中的数据，
    这些数据只有在同一个会话中的页面才能访问并且当会话结束后数据也随之销毁。因此sessionStorage不是一种持久化的本地存储，仅仅是会话级别的存储。
    localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。
2014/2/8 周六 21：36 164
    遇到一个关于字体大小的问题，就是chrome浏览器中支持的最小字体大小是12px，当设置的字体大小小于12px时，在页面中看到的其实都是12px大小的字体。
    解决办法： 在css样式中写下
            -webkit-text-size-adjust: none;
            -webkit-transform: scale(0.83);
            font-size: 10px;
    另外，todosmvc网站上的小例子要做。
    重要的是，思考和处理问题的方法。当看到这个例子后，几分钟大概能知道他是怎么样的表现形式。如果自己要做的话，就把这个例子从头到尾可能涉及到的技术点和知识点
    列出来，写在纸上，这样一条一条就能清晰的呈现出来，问题在哪里就更清楚了。
    还有一个没有改过来的缺点，看书过程中要去查看不懂的点。
    linux卸载apache：sudo apt-get remove apache*
                    sudo apt-get autoremove
2014/2/9 周日 8:09
 这周都在折腾这个，LAMP就是linux-apache-mysql-php.
 我是上周把linux搞坏了，修复还不会用，直接干掉了，这周信安装的。挺折腾的，顺便写一下。
 主要是为了自已以后要用到的时候方便。
 好，进入正题。
 一、既然是LAMP当然要有linux了，第一步就是安装linux系统。
     1.在win7下用UltraISO把已经下载好的linuxmint15系统在U盘里弄了个镜像。
     （具体步骤不记得了，网上都有，我现在只是写一下大概的步骤，以免自己以后在用到的时候不知道怎么弄）
     2.在win7下腾出一块空间，我是把F盘压出了大概40G。不要格式化，也不要新建卷，我新建卷后反复几次都没装对。
     3.之后插入有镜像的u盘，重启，按F2，把电脑修改成从U盘启动。
     4.之后就进入了正式安装，双击桌面上的光盘图标，之后根据步骤来就行。这中间会遇到linux分区的问题，我搞不懂方正是分了15G。自己可以去google一下。
     5.linux算装完了。
 二、开始装php的开发环境。这个其实是抄的，主要内容（99.99% 0_0！!!）来自以下网址：
     http://www.php100.com/html/itnews/it/2013/0219/12062.html
     1.获取软件包
    所有源码包打包下载：http://pan.baidu.com/share/link?shareid=386483&uk=3206814945
     把上面下载的13个源代码包放到linux系统下的/usr/local/src/目录中。
     2.检查编译工具是否存在
    gcc -v
     我的是有的，有没有看提示就行。
     没有的话，可以继续google一下。
     3.搭建LAMP环境时，需要安装的所有软件都要按照一定的顺序安装，我们按照Apache->MySQL->PHP的顺序安装。但是在安装PHP之前，应先安装PHP5需要的最新版本库文件，例如libxml2、libmcrypt，以及GD2库等文件。安装GD2库是为了让PHP5支持 GIF、PNG和JPEG图片格式，所以在安装GD2库之前还要先安装最新的zlib、libpng、freetype和jpegsrc等库文件。而且中间还会穿插安装一些软件。
     4.解压tar.gz为后缀的压缩包软件
     解压命令#sudo tar zxvf tarfile.tar.gz
     5.在linux系统中源代码包安装过程
    进行解压后的目录，LAMP环境搭建所需要的软件都使用C语言开发的，所以安装源代码文件最少需要配置(configure)、编译(make)、安装(make install)三个步骤。
    （1）安装libxml2最新库文件：
        a.进入下载的软件源码包所在目录/usr/local/src/下，解压软件包libxml2-2.9.0.tar.gz到当前目录libxml2-2.9.0下，并进入libxml2-2.9.0目录
            cd /usr/local/src  //进入软件源码包所在目录
            sudo tar zxvf libxml2-2.9.0.tar.gz //解包解压
            cd libxml2-2.9.0  //进入解包解压后的目录
        b.使用configure命令检查并配置安装需要的系统环境，并生成安装配置文件
            cd /usr/local //进入该目录
            mkdir libxml2 //新建文件夹
            /local/libxml2必需存在，才能执行下一条命令，我是试了好几次才知道呀！
            sudo ./configure --prefix=/usr/local/libxml2
            //选项--prefix=/usr/local/libxml2作用，是在安装时将软件安装到/usr/local/libxml2 目录下
        c.使用make命令编译源代码文件并生成安装文件
            make  //对软件源代码文件进行编译
        d.使用make install命令安装编译过的文件
            make install  //开始安装libxml2库文件
        如果安装成功以后，在/usr/local/libxml2/目录下将生成bin,include,lib,share四个目录。在后面安装 PHP5源代码的配置时，会通过在configure命令的选项中加上"--with-libxml-dir=/usr/local/libxml2"选 项，用于指定安装libxml2库文件的位置.
    (2)安装libmcrypt最新库文件
        安装方法与上面安装libxml2方法相同，注意configure时的路径/usr/local/libmcrypt
        如果安装成功就会在/usr/local/libmcrypt/目录下生成bin,include,lib,man,share五个目录。然后在安 装PHP5源代码包的配置时，就可以通过configure命令加上“--with-mcrypt-dir=/usr/local/libmcrypt” 选项，指定这个libmcrypt库文件的位置。
    果断报错：configure: error: C++ compiler cannot create executables 。
    解决方案:运行下面命令,然后重新configure（配置）
        yum install gcc gcc-c++ gcc-g77
    我没有装yum然后有装的yum，还是不行，因为我没有配置yum的repository，这个不太懂，搜了一下报的错误，最后解决方法如下
        sudo apt-get install g++
        当然要多谢这位老兄了
        http://blog.163.com/youismiling@126/blog/static/1032400672010112283911452/
    之后的步骤和上面类似。
    执行完sudo make和 sudo make install之后在/usr/local/libmcrypt下果然有了
    bin  include  lib  man  share
    这五个文件夹。
    安装完成libmcrypt库以后，不同的linux系统版本有可能还要安装一下libltdl库。安装方法和前面的步骤相同，可以进入到解压缩的 目录/usr/local/src/libmcrypt-2.5.8下，找到libltdl库源代码所在的目录libltdl,进入这个目录按照下面几个 命令配置、编译、安装就可以了。
    pwd
    /usr/local/src/libmcrypt-2.5.8/libltdl  //进入软件源代码目录
    sudo ./configure --enable-ltdl-install  //配置ltdl库的安装
    sudo make  //编译
    sudo make install  //安装
    (3)安装zlib最新库文件
    安装方法与前面安装libxml2的方法相同，要注意的地方就是路径/usr/local/zlib/。如果安装成功将会在/usr/local /zlib目录下生成include,lib,share三个目录。在安装PHP5配置时，在configure命令的选项中加上“--with- zlib-dir=/usr/local/libmcrypt”选项，用于指定zlib库文件位置。
    (4)安装libpng最新库文件
        安装方法与前面安装libxml2的方法相同，要注意路径/usr/local/libpng/

        在./configure --prefix=/usr/local/libpng这步最后会提示：configure: error: ZLib not installed
        又一次果断报错了。
        解决方法如下：
        1.进入zlib的源文件目录，执行命令 make clean,清除zlib；
        2.重新配置 ./configure,后面不要接--prefix参数；
        3.make && make install；
        4.进入libpng目录，执行命令 ./configure --prefix=/usr/local/libpng;
        5.make && make install；
        6.安装成功.
        如果安装成功将会在/usr/local/libpng目录下生成bin,include,lib和share四个目录。在安装GD2库配置时，通 过在configure命令选项中加上“--with-png=/usr/local/libpng”选项，指定libpng库文件的位置。
    （5）安装jpeg8最新库文件
        step1:安装GD2库前所需的jpeg8库文件，需要自己手动创建安装需要的目录，它们在安装时不能自动创建。命令行如下。
            mkdir /usr/local/jpeg8  //建立jpeg8软件安装目录
            mkdir /usr/local/jpeg8/bin //建立存放命令的目录
            mkdir /usr/local/jpeg8/lib  //创建jpeg8库文件所在目录
            mkdir /usr/local/jpeg8/include //建立存放头文件目录
            mkdir -p /usr/local/jpeg8/man/man1 //建立存放手册的目录

        step2:configure有点不一样，如下命令行示：
        [root@localhost   jpeg-8b]# ./configure \
        > --prefix=/usr/local/jpeg8/ \
        > --enable-share \
        > --enable-static
        警告:configure: WARNING: unrecognized options: --enable-share
        这一次没有报错。
        在安装GD2库配置时，可以在configure命令的选项中加上“--with-jpeg=/usr/local/jpeg8”选项，指定jpeg8库文件的位置。安装PHP时也要指定该库文件的位置。
    （6）安装freetype最新库文件
        a:进入软件源码包所在目录/usr/local/src/中，解压软件包freetype-2.4.10.tar.gz到当前目录freetype-2.4.10下，并进入freetype-2.4.10目录。命令行如下：
        #cd /usr/local/src/   //进入软件源码包所在目录
        #tar zxvf freetype-2.4.10.tar.gz  //解压包到freetype-2.4.10目录
        #cd freetype-2.4.10 //进入目录freetype-2.4.10中
        b:使用configure命令检查并配置安装需要的系统环境，并生成安装配置文件。命令行如下：
        #./configure --prefix=/usr/local/freetype //选项--prefix=/usr/local/freetype，是在安装时将软件安装到/usr/local/freetype目录下
        c:使用make命令编译源代码文件并生成安装文件，命令行如下：
        #make  //对软件源代码文件进行编译
        d:使用make install命令进行安装，命令行如下：
        #make install //开始安装freetype库文件
        如果安装成功将会在/usr/local/freetype目录下存在bin,include,lib和share四个目录。并在安装GD2库时， 通过configure命令选项中加上“--with-freetype=/usr/local/freetype/”选项，指定freetype库文件 位置。
    (7)安装autoconf最新的库文件
        其方法与上面安装freetype相同。唯一注意的地方是configure时，不用指定路径。
        执行sudo ./configure后在执行sudo make报错:
            configure: error: no acceptable m4 could be found in $PATH
            大概意思是m4-1.4.6以后的版本，然后装了一下在执行就好了。
            tar -zvxf m4-1.4.9.tar.gz
            cd m4-1.4.9
            ./configure
            make
            make install
        来自http://blog.csdn.net/ldl22847/article/details/8575140
    （8）安装最新的GD库文件
        安装方法大致与freetype相同。唯一注意的地方是configure时的路径，命令行如下：
        #./configure \  //配置命令
        >--prefix=/usr/local/gd \  //指定安装软件的位置
        >--with-jpeg=/usr/local/jpeg8/ \  //指定去哪找jpeg库文件
        >--with-png=/usr/local/libpng/ \  //指定去哪找png库文件
        >--with-freetype=/usr/local/freetype/   //指定去哪找freetype 2.x字体库的位置
        如果安装成功会在/usr/local/gd/目录下存在bin、include和lib这三个目录。在安装PHP5时，通过在configure命令选项中加上“--with-gd=/usr/local/gd”选项，指定GD库文件的位置。
        如果报错:
            make[2]: *** [gd_png.lo] Error 1
            make[2]: Leaving directory `/tmp/gd-2.0.35'
            make[1]: *** [all-recursive] Error 1
            make[1]: Leaving directory `/tmp/gd-2.0.35'
            make: *** [all] Error 2
        当然，又一次报错了。
        解决方案:vi gd_png.c
            找到#include "png.h"改成#include "/usr/local/libpng/include/png.h"
    （9）安装新版本的apache服务器
        1、卸载apr、apr-util
        yum remove apr apr-util
        下载安装：
        http://apr.apache.org/download.cgi
        apr-1.4.6.tar.gz
        ./configure --prefix=/usr/local/apr-httpd/ && make && make install

        下载安装：
        http://apr.apache.org/download.cgi
        apr-util-1.5.1.tar.gz
        ./configure --prefix=/usr/local/apr-util-httpd/ --with-apr=/usr/local/apr-httpd/ && make && make instal

        下载：http://sourceforge.net/projects/pcre
        #unzip -o pcre-8.32.zip
        #cd pcre-8.32
        #./configure --prefix=/usr/local/pcre
        #make
        #make install

        [root@localhost   httpd-2.4.3]# ./configure \
        > --prefix=/usr/local/apache243 \
        > --enable-mods-shared=all \
        > --enable-deflate \
        > --enable-speling \
        > --enable-cache \
        > --enable-file-cache \
        > --enable-disk-cache \
        > --enable-mem-cache \
        > --enable-so \
        > --enable-expires=shared \
        > --enable-rewrite=shared \
        > --enable-static-support \
        > --sysconfdir=/etc/httpd \
        > --with-z=/usr/local/zlib \
        > --with-apr=/usr/local/apr-httpd/ \
        > --with-apr-util=/usr/local/apr-util-httpd/ \
        > --with-pcre=/usr/local/pcre/ \
        > --disable-userdir

        #make && make install

        安装完成后，进入/usr/local/apache243/目录下，检查是否有以下文件：

        bin  build  cgi-bin  error  htdocs  icons  include  logs  man  manual  modules
        正好，一个不多一个不少，11个文件。

        启动Apache服务器，并查端口是否开启，启动Apache服务器的命令行如下：
        #/usr/local/apache243/bin/apachectl start

        提示信息:AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using ::1. Set the 'ServerName' directive globally to suppress this message

        我在/usr/local/apache243下执行以上命令的结果：
         sudo /usr/local/apache243/bin/apachectl start
 AH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message

        解决方案:
            vi /etc/httpd/httpd.conf
            加上下面一行,重启apache
            ServerName localhost:80

        查看端口命令行如下：
        #netstat -tnl|grep 80
        tcp        0      0 0.0.0.0:80                  0.0.0.0:*                   LIST
        我的结果是：
        tcp6       0      0 :::80                   :::*                    LISTEN
        测试安装结果，打开浏览器，在地址栏中输入URL为：http://192.168.146.129/
        如果浏览器中出现It works!则表明Apache服务器可以使用。
        我输入的是：
            http://localhost/
            http://127.0.0.1/
        都可以显示It work！当然输入http://192.168.146.129/是显示不出来的。

        每种服务器软件都有必要制成开机时自动启动，Apache服务器开机自动启动，只要在“/etc/rc.d/rc.local”文件，加上 Apache服务器的启动命令即可。可以直接打开“/etc/rc.d/rc.local”文件，在最后一行写入Apache启动命令，也可以用echo 命令追加进去，如下命令行示：
        [root@localhost   apache243]# echo "/usr/local/apache243/bin/apachectl start" >> /etc/rc.d/rc.local

        实际上我却没有找到这个文件，我不知道是不是装错了，直接新建了一个，不知道行不行，继续下面的步骤了。
        当然，我有遇到了更大的问题，编辑完以后没办法退出，
        无论是：wq还是：w ！sudo tee %都不行，我暂时放弃，只能每次开机在手动启动apache，啊。。。。。。。。
        我突然发现了在/ect下有一个rc.local的文件，直接改了 到时候在看效果吧
    （10）安装MySQL数据库管理系统
        1、增加用户名和用户组
        #groupadd mysql
        #useradd -g mysql mysql
        2、进入源码包使用configure 检查并配置安装需要的系统环境，并生成安装配置文件
        #./configure \
        >--prefix=/usr/local/mysql \  //将软件安装在/usr/local/mysql目录下
        >--enable-thread-safe-client \
        >--with-extra-charsets=all  //在安装mysql时安装所有字符集
        如果遇到错误信息:
        checking for tgetent in -lncurses... no
        checking for tgetent in -lcurses... no
        checking for tgetent in -ltermcap... no
        checking for termcap functions library... configure: error: No curses/termcap library found
        原因:缺少ncurses安装包

        在一次遇到了错误，哎呀！

        解决方案:
        执行下面三行命令,执行完之后重新./configure（配置）
        yum list|grep ncurses
        yum -y install ncurses-devel
        yum install ncurses-devel

        我用的是：sudo apt-get install libncurses5-dev
        多谢这位大侠：http://blog.csdn.net/zccst/article/details/4493074

        接着#make && make install

        3、创建mysql数据库服务器的配置文件，可以使用源码包support-files目录中的my-medium.cnf文件作为模板，将其复制到/etc/目录下，命名为my.cnf文件即可。
        [root@localhost   mysql-5.0.18]# cp support-files/my-medium.cnf /etc/my.cnf

        4、如果还没安装过MySQL,必须创建MySQL授权表。进入到安装目录/usr/local/mysql下，执行bin目录下的mysql_install_db脚本，用来初始化MySQL数据库的授权表，其中存储了服务器访问允许。
        [root@localhost   mysql-5.0.18]#cd /usr/local/mysql
        [root@localhost   mysql]# bin/mysql_install_db --user=mysql  //创建授权表
        如果使用root用户运行上面的命令，应当使用--user选项，选项的值应当与你在第一步为运行服务器所创建的登录账户(mysql用户)相同。 如果用mysql用户登录来运行上面的命令，可以省略--user选项。用mysql_install_db创建mysql授权表后，需要手动重新启动服务器。
        我遇到了问题：执行以上命令后，终端显示如下：
            Installing all prepared tables
        只显示这个，没有其他任何信息，然后一直不动。查看cup的话，几乎到了百分之百。哎！
        没什么办法，去网上找也没什么解决的办法？？？
        可能我已经装了mysql，就是123这三步，我试一下跳过这一步。
        其实我没装mysql，有时间再说吧！睡觉。

        5、将程序二进制的所有权改为root用户，数据目录的所有权改为运行mysqld程序的mysql用户。如果现在位于安装目录(/usr/local/mysql)下，命令行如下：
        [root@localhost   mysql]# chown -R root .(注意有点)  //将文件的所有属性改为root用户
        [root@localhost   mysql]# chown -R mysql var  //将数据目录的所有属性改为mysql用户
        [root@localhost   mysql]# chgrp -R mysql .  //将组属性改为mysql组

            [root@localhost   mysql]# ls -l
            total 40
            drwxr-xr-x. 2 root  mysql 4096 Feb  7 20:50 bin
            drwxr-xr-x. 3 root  mysql 4096 Feb  7 20:50 include
            drwxr-xr-x. 2 root  mysql 4096 Feb  7 20:50 info
            drwxr-xr-x. 3 root  mysql 4096 Feb  7 20:50 lib
            drwxr-xr-x. 2 root  mysql 4096 Feb  7 20:50 libexec
            drwxr-xr-x. 3 root  mysql 4096 Feb  7 20:50 man
            drwxr-xr-x. 7 root  mysql 4096 Feb  7 20:50 mysql-test
            drwxr-xr-x. 3 root  mysql 4096 Feb  7 20:50 share
            drwxr-xr-x. 5 root  mysql 4096 Feb  7 20:50 sql-bench
            drwx------. 4 mysql mysql 4096 Feb  7 20:53 var

        6、在所需要的东西被安装完成后，应当使用下面的命令启动MySQL服务了，命令行如下：
        [root@localhost   mysql]#/usr/local/mysql/bin/mysqld_safe --user=mysql &
        报告信息(不理会):
        [root@localhost   mysql]# /usr/local/mysql/bin/mysqld_safe --user=mysql &
        [1] 4720
        [root@localhost   mysql]# nohup: ignoring input and redirecting stderr to stdout
        Starting mysqld daemon with databases from /usr/local/mysql/var
        我执行命令后：
         $ /usr/local/mysql $ sudo /usr/local/mysql/bin/mysqld_safe --user=mysql &
        [3] 31561
        [2]   Exit 1  /usr/local/mysql/bin/mysqld_safe --user=mysql
        $ usr/local/mysql $ nohup: ignoring input and redirecting stderr to stdout
        Starting mysqld daemon with databases from /usr/local/mysql/var

        7、MySQL数据库服务器启动之后，查看一下它的端口3306是否打开，如果看到以下结果表明mysql服务启动成功。命令行如下
        [root@localhost   mysql]# netstat -tnl|grep 3306
        tcp        0      0 0.0.0.0:3306                0.0.0.0:*                   LISTEN
        没什么显示，证明mysql服务没有启动成功。哎！11：27了，不搞了，只能以后在说了。

        8、使用mysqladmin验证服务器在运行中。以下命令提供了简单的测试，可检查服务器是否已经开启并能响应连接。命令行如下：
        [root@localhost   mysql]# bin/mysqladmin  version

        Enter password:

        bin/mysqladmin  Ver 8.41 Distrib 5.0.18, for pc-linux-gnu on i686

        Copyright (C) 2000 MySQL AB & MySQL Finland AB & TCX DataKonsult AB

        This software comes with ABSOLUTELY NO WARRANTY. This is free software,

        and you are welcome to modify and redistribute it under the GPL license

        Server version          5.0.18-log

        Protocol version        10

        Connection              Localhost via UNIX socket

        UNIX socket             /tmp/mysql.sock

        Uptime:                 18 min 59 sec

        Threads: 1  Questions: 3  Slow queries: 0  Opens: 0  Flush tables: 1  Open tables: 6  Queries per second avg: 0.003

        [root@localhost   mysql]# bin/mysqladmin variables //查看所有mysql参数

        9、设置访问权限，在mysql安装过程中，使用mysql_install_db程序安装了mysql数据库授权表，表定义了初始mysql用户 账户和访问权限，所有初始化账户均没有密码。这些账户为超用户账户，可以执行任何操作。初始root账户的密码为空，因此任何人可以用root账户不用任 何密码来连接mysql服务器，并具有所有权限，这意味着mysql安装未受保护。如果你想要防止客户端不使用密码用匿名用户来连接，你应当为匿名账户指 定密码或删掉匿名帐户，应当为mysql root账户指定密码。使用mysql -u root启动mysql客户端控制台，连接mysql服务器。命 令行如下：

        [root@localhost   mysql]# bin/mysql -u root  //没有密码可直接登录本机服务器

        Welcome to the MySQL monitor.  Commands end with ; or \g.

        Your MySQL connection id is 5 to server version: 5.0.18-log

        Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

        10、如果有匿名账户存在，它拥有全部的权限，因此删掉它可以提高安全，在mysql客户端执行SQL语如下：

        mysql> delete from mysql.user where host='localhost' and user='';

        Query OK, 1 row affected (0.01 sec)



        mysql> flush privileges;

        Query OK, 0 rows affected (0.00 sec)



        11、可以用几种方法为root账户指定密码，我们选择用其中的一种。在mysql客户端命令行上使用set password指定密码，一定要使 用password()函数来加密密码。例如下面设置localhost域的密码为ios100。其他域可以使用同样的语句，使用的SQL语句如下。

        mysql> set password for 'root'@'localhost'=password('ios100');

        Query OK, 0 rows affected (0.00 sec)



        12、如果想退出mysql客户端，可以在mysql客户端提示符下输入命令exit或者quit，还可以按键盘ctrl+c组合键，都可以从 mysql客户端退出。因为已经给mysql服务器的root账号设置了密码，所以再次登录mysql客户端就要提供密码才能进入。退出mysql客户端 和重新启动mysql客户端的控制台命令如下。

        mysql> exit

        Bye

        [root@localhost   mysql]# bin/mysql -u root -h localhost -p

        Enter password:

        Welcome to the MySQL monitor.  Commands end with ; or \g.

        Your MySQL connection id is 6 to server version: 5.0.18-log

        Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

        如果想关闭mysql服务器，在命令行使用mysql服务器的mysqladmin命令，通过-u参数给出mysql数据库管理员用户名root和通过-p参数给出密码，即可关闭mysql服务器。如下示：

        [root@localhost   mysql]# bin/mysqladmin -u root -p shutdown

        Enter password:

        STOPPING server from pid file /usr/local/mysql/var/localhost.pid

        130207 21:27:05  mysqld ended

        [1]+  Done                    /usr/local/mysql/bin/mysqld_safe --user=mysql



        13、mysql服务器和apache服务器一样也有必要设置为开机自动运行，设置方法进入到mysql源代码目录/usr/local/src /mysql-5.0.18,将子目录support-files下的mysql.server文件复制到/etc/rc.d/init.d目录中，并重 命名为mysqld,命令行如下。

        [root@localhost   mysql]# cd /usr/local/src/mysql-5.0.18

        [root@localhost   mysql-5.0.18]# cp support-files/mysql.server /etc/rc.d/init.d/mysqld

        修改一下权限

        [root@localhost   mysql-5.0.18]# chown root.root /etc/rc.d/init.d/mysqld

        [root@localhost   mysql-5.0.18]# chmod 755 /etc/rc.d/init.d/mysqld

        把mysqld添加到chkconfig中

        [root@localhost   mysql-5.0.18]# chkconfig --add mysqld

        在图形和字符集界面下自动启动mysqld

        [root@localhost   mysql-5.0.18]# chkconfig --level 3 mysqld on

        [root@localhost   mysql-5.0.18]# chkconfig --level 5 mysqld on

        再使用chkconfig --list命令检查设置

        [root@localhost   mysql-5.0.18]# chkconfig --list mysqld

        mysqld          0:off   1:off   2:on    3:on    4:off    5:on    6:off

        安装最新版的PHP模块

        进入php-5.4.11源码包编译

        [root@localhost   php-5.4.11]# ./configure \

        > --prefix=/usr/local/php \

        > --with-config-file-path=/usr/local/php/etc \

        > --with-apxs2=/usr/local/apache243/bin/apxs \

        > --with-mysql=/usr/local/mysql/ \

        > --with-libxml-dir=/usr/local/libxml2/ \

        > --with-png-dir=/usr/local/libpng/ \

        > --with-jpeg-dir=/usr/local/jpeg8/ \

        > --with-freetype-dir=/usr/local/freetype/ \

        > --with-gd=/usr/local/gd/ \

        > --with-zlib-dir=/usr/local/zlib/ \

        > --with-mcrypt=/usr/local/libmcrypt/ \

        > --with-mysqli=/usr/local/mysql/bin/mysql_config \

        > --enable-soap \

        > --enable-mbstring=all \

        > --enable-sockets

        make（配置）

        提示信息：

        Build complete.

        Don't forget to run 'make test'.

        解决方案：

        不要make test 直接make install

        配置时可能会出现下面的错误:

        checking for MySQL support... yes

        checking for specified location of the MySQL UNIX socket... no

        checking for MySQL UNIX socket location... no

        configure: error: Cannot find libmysqlclient_r under /usr/local/mysql. Note that the MySQL client library is not bundled anymore!

        其实这跟PHP没有关系，那是因为在编译APACHE的时候，使用--with-mpm模块，所以就必须在编译MYSQL的时候加上 --enable-thread-safe-client.参数

        这是PHP5.2的一个改进，在PHP5.2.0之前的版本都不需要MYSQL启用安全线程。关于--enable-thread-safe- client项的官方介绍如下:如何生成线程式客户端库总是线程安全的。最大的问题在于从套接字读取的net.c中的子程序并不是中断安全的。或许你可能 希望用自己的告警中断对服务器的长时间读取，以此来解决问题。如果为SIGPIPE中断安装了中断处理程序，套接字处理功能应是线程安全的。 SupeSite/X-为了避免连接中断时放弃程序，MySQL将在首次调用mysql_server_init()、mysql_init()或 mysql_connect()时屏蔽SIGPIPE。如果你打算使用自己的SIGPIPE处理程序，首先应调用 mysql_server_init()，然后安装你的处理程序.

        还有第二种解决方法比较方便 ：编译之前，先处理一下mysql的库，默认查找libmysqlclient_r.so，可是mysql默认为libmysqlclient.so，内容完全一样，做个链接即可

        # cd /usr/local/mysql/lib/mysql/

        # ln -s libmysqlclient.so.15.0.0 libmysqlclient_r.so

        (以上解决方法来自互联网！)

        还会报make: *** [ext/gd/gd.lo] error

        解决方法如下:

        好像说这个错误算是php5.4的bug，下面对应的两篇文章有对应的说明:

        https://bugs.php.net/bug.php?id=55224

        https://bugs.php.net/bug.php?id=60108

        解决方法：

        vi <gd_dir>/include/gd_io.h

        gdIOCtx结构中增加void *data;

        格式如下

        typedef struct gdIOCtx

        {

        int (*getC) (struct gdIOCtx *);

        int (*getBuf) (struct gdIOCtx *, void *, int);



        void (*putC) (struct gdIOCtx *, int);

        int (*putBuf) (struct gdIOCtx *, const void *, int);



        /* seek must return 1 on SUCCESS, 0 on FAILURE. Unlike fseek! */

        int (*seek) (struct gdIOCtx *, const int);



        long (*tell) (struct gdIOCtx *);



        void (*gd_free) (struct gdIOCtx *);

        void (*data);

        }

        gdIOCtx;

        我的GD安装在/usr/local/gd2目录下，所以是#vi vi /usr/local/gd/include/gd_io.h

        libltdl.so.3: cannot open shared object file: No such file or directory

        make: *** [ext/phar/phar.php] Error 127

        解决方法：

        ln -s /usr/local/lib/libltdl.so.3 /usr/lib/libltdl.so.3

        [root@localhost   ~]# cd /usr/local/libpng/lib/

        [root@localhost   lib]# ls

        libpng15.a   libpng15.so     libpng15.so.15.10.0  libpng.la  pkgconfig

        libpng15.la  libpng15.so.15  libpng.a             libpng.so

        可以看到libpng15.so.15

        然后修改/etc/ld.so.conf 文件：vi /etc/ld.so.conf

        在第一行下面追加/usr/local/libpng/lib这个路径。

        然后重新编译安装即可。

        提示信息：

        =====================================================================

        =====================================================================

        WARNED TEST SUMMARY

        ---------------------------------------------------------------------

        Bug #52062 (large timestamps with DateTime::getTimestamp and DateTime::setTimestamp) (32 bit) [ext/date/tests/bug52062.phpt] (warn: XFAIL section but test passes)

        =====================================================================

        You may have found a problem in PHP.

        This report can be automatically sent to the PHP QA team at

        http://qa.php.net/reports and http://news.php.net/php.qa.reports

        This gives us a better understanding of PHP's behavior.

        If you don't want to send the report immediately you can choose

        option "s" to save it.  You can then email it to qa-reports@lists.php.net later.

        Do you want to send this report now? [Yns]:

        解决方案：

        不要make test 直接make install



        安装完成后，需要建立PHP配置文件。在使用configure命令安装配置时使用“--with-config-file-path=/usr /local/php/etc/”选项，指定了配置文件的位置。将源码包下面的php.ini-development 文件复制到/usr/local /php/etc/中，并改名为php.ini即可，如下示:

        [root@localhost   php-5.4.11]# cp php.ini-development /usr/local/php/etc/php.ini

        修改php.ini 把;date.timezone 前面的分号去掉,改成date.timezone ="PRC"

        整合Apache与PHP，上面编译之前，我们使用configure命令安装配置时，使用--with-apxs2=/usr/local /apache242/bin/apxs选项以使Apache 2将PHP作为功能模块使用。但我们还要修改Apahce配置文件，添加PHP的支持，告 诉Apache将哪些后缀作为PHP解析。例如，让Apache把.php或.phtml后缀名解析为PHP.使用vi打开Apache的配置文件 /etc/httpd/httpd.conf,找到AddType application/x-gzip .gz .tgz指令选项，并在其下方添加一 条指令AddType application/x-httpd-php .php .phtml。也可以将任何后缀的文件解析为PHP，只要在添加的语 句中加入并用空格分开，这里以多添加一个.phtml来示例，如下示:

        # If the AddEncoding directives above are commented-out, then you

        # probably should define those extensions to indicate media types:

        #

        AddType application/x-compress .Z

        AddType application/x-gzip .gz .tgz

        AddType application/x-httpd-php .php .phtml

        修改完成后必须重启Apache服务器，才能重新加载配置文件使修改生效。

        [root@localhost   php-5.4.11]#/usr/local/apache243/bin/apachectl stop

        [root@localhost   php-5.4.11]#/usr/local/apache243/bin/apachectl start



        测试PHP环境是否可以正常运行，在/usr/local/apache243/htdocs目录下建一个test.php或test.phtml的文件，内容如下示:

        <?php

        phpinfo();

        ?>

        打开浏览器，在地址栏输入http://192.168.146.129/test.php来运行该文件，如果出现下图内容，说明LAMP环境安装成功。



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052451252.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        上例中使用phpinfo()函数，作用是输出有关PHP当前状态的大部分信息内容，这包括关于PHP的编译和扩展信息、PHP版本、服务器信息和 环境、PHP的环境、操作系统信息、路径、主要的和本地配置选项的值、HTTP头信息和PHP许可等。因为每个系统的安装不同，phpinfo()函数可 以用于检查某一特定系统配置设置和可用的预定义变量等。它也是一个宝贵的调试工具，因为它包含了所有 EGPCS(Environment,GET,POST,Cookie,Server)数据。

        phpMyAdmin的安装

        1、进入软件源码所在的目录/usr/local/src/中，并解压软件包phpMyAdmin-3.5.6-all-languages.tar.gz到当前目录phpMyAdmin-3.5.6-all-languages下。

        2、把解压的目录phpMyAdmin-3.5.6-all-languages下的文件，全部复制到Apache的/usr/local/apache243/htdocs下，并新建一个名为phpmyadmin的目录下面，即安装完成。

        [root@localhost   src]# cp -a phpMyAdmin-3.5.6-all-languages /usr/local/apache243/htdocs/phpmyadmin

        3、在使用phpmyadmin之前，也需要先配置一下。配置的方法是通过对phpmyadmin顶层目录下的config.inc.php文件中 的几个选项做一些设置即可。默认不存在config.inc.php文件，我们需要手工创建一个，也可以复制config.sample.inc.php 模板得到最低限度的配置文件。

        [root@localhost   src]# cd /usr/local/apache243/htdocs/phpmyadmin/

        [root@localhost   phpmyadmin]# cp config.sample.inc.php config.inc.php



        phpMyAdmin的配置

        我们通过身份验证模式的要求，可以有两种配置方案，一种是http和cookie身份验证模式。在这两种模式下，用户必须先在一个登录窗 口里输入MySQL数据库的有效用户名和密码，才能使用phpMyAdmin程序。这种做法有两个明显的好处；首先，因为MySQL数据库的密码没有出现 在config.inc.php文件里，所以身份验证过程更加安全；其次，允许以不同的用户身份登录对自己的数据库进行管理。这两种身份验证模式尤其适合 数据库中多个用户账号的情况。

        第二种方案是，config身份验证模式。这种情况下，密码以明文形式保存在config.inc.php文件里。只需要把MySQL用户 名和密码直接写入到config.inc.php文件即可。这样，在登录phpMyAdmin时就不会提示输入用户名和密码了，而只直接用 config.inc.php文件里写入的用户登录 。如果只是在一个本地测试系统上使用phpMyAdmin,可以使用这种模式。

        1、http身份验证模式

        如果想让phpMyAdmin使用HTTP身份验证模式，首先需要在config.inc.php文件做如下修改：



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052451113.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        当完成设置之后，我们启动phpMyAdmin时，屏幕上将弹出一个WEB浏览器对话框，需要在这个对话框里输入MySQL用户名和密码，才能进入 phpMyAdmin操作界面。如下图示，在windows客户端用IE浏览器，访问WEB服务器的phpMyAdmin目录下的index.php文 件，即可启动phpMyAdmin.



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052452635.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        2、cookie身份验证模式

        cookie身份验证模式是HTTP身份验证模式的补充，不能使用HTTP身份验证模式的场合都可以使用它。cookie身份验证模式要求用户必须允许来自phpMyAdmin的cookie进入自己的计算机。即用户需要在浏览器中开启客户端的cookie功能。

        如果想让phpMyAdmin使用cookie身份验证模式，除了必须修改config.inc.php文件里的auth_type语句外， 还必须向blowfish_secret参数提供一个字符串。这个字符串可以是任意的，目的是在把登录时使用的用户和密码存储在客户端电脑上的 cookie之前，系统将会使用这个字符串对它们进行加密码。在config.inc.php中修改的内容如下图示：



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052452427.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        和上面启动phpMyAdmin的方式一样，我们在windows客户端使用IE浏览器，访问web服务器上的phpMyAdmin目录下的index.php文件，需要提供MySQL的用户名和密码才能登录，如下图示：



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052452987.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        3、config身份验证模式

        如果想让phpMyAdmin使用config身份验证模式，首先需要在config.inc.php文件里做出如下所示的修改。把MySQL数据库的用户名和密码以明文的方式写入，具体修改内容如下图示:



        <a href="http://www.php100.com/uploadfile/2013/0219/20130219052453923.png" target="_blank" class="cboxElement" rel="example4" 15"="" style="text-decoration: none; color: rgb(1, 150, 227); ">



        和上面启动phpMyAdmin的方式一样，我们在windows客户端使用IE浏览器，访问WEB服务器上的phpMyAdmin目录下的 index.php文件。但不用提供MySQL的用户名和密码就可以登录，它是使用config.inc.php中以明文方式写入的用户名和密码登录的。 这里不在截图。

        到这里LAMP就安装完成了，我们下载的软件中有一个ZendGuard没用上，原因是我安装的php5.4.11的版本，截止到现在官方还没有支持PHP5.4版本的Zend加速器，官方截图如下:




        以上这些步骤我只是执行到（10）安装mysql的第四步，第二天晚上（也就是今天晚上 2014/1/20 周一）我都通过sudo make uninstall卸载了，当然不是所有的
            apr-1.4.6  apr-util-1.5.1  httpd-2.4.3
        这三项都不行，报错：
            make: *** No rule to make target `uninstall'.  Stop.
        我最后的处理方式是直接rm掉了。
        装了一天半的东西，一晚上干掉了。哎！我真是瞎折腾！

    好了，编译安装php环境的这条路我暂时走到这里，记录一下，其实主要是抄袭高手的东西。
    最后，再一次感谢各位大侠的帮助。
    http://www.php100.com/html/itnews/it/2013/0219/12062.html
    http://blog.163.com/youismiling@126/blog/static/1032400672010112283911452/
    http://blog.csdn.net/ldl22847/article/details/8575140
    http://blog.csdn.net/zccst/article/details/4493074
2014/2/9 周日 10：56
    刻镜像、装系统、装chrome、装git、装phpstorm。
    装完phpstorm后没有在菜单中看到，要建立快捷方式才行。
    之后就是php环境的安装了。
    按照http://blog.csdn.net/warren912/article/details/17486211#安装的。
    1.安装apache2
        sudo apt-get install apache2
        Apache安装成功后，/var/www/默认作为web的根目录，所有web资源都应该放在该目录或其子目录中。
    2.安装PHP5并测试
        sudo apt-get install php5 libapache2-mod-php5
        新建/var/www/phptest.php文件，文件内容如下：
            <?php phpinfo(); ?>
        在浏览器中输入以下网址：
            http://localhost/phptest.php
        如果打开了php信息页面，则说明一切正常。
        我看到了期待看到的。
    3.安装MySQL5
        这是个关键的步骤，上一次我就没弄好。不知道为什么卡住不动了，希望这一次能顺利。
        sudo apt-get install mysql-server
        过程中让输入密码，我输了两次，每次密码都一样，上一次我空着。
        没有问题，装完了。
    4.安装MySQL Administrator
        sudo apt-get install mysql-admin
        执行命令，得到的提示是：
            E: 未发现软件包 mysql-admin
        我换成mysql-administrator,得到的提示：
            E: 未发现软件包 mysql-administrator
        我知道是不是有这个软件包，反正我得到的提示是没有。
        之后我试了一下：进入目录/var/lib下，执行 mysql -u root -p，然后输入密码，就可以登录mysql了。
        终于成了。
        我就跳过了这一步。有问题的话再说。
    5.安装phpmyadmin并进行相关配置
        上次装的时候没有注意到这个标题的意思，不仅要安装，还要自己进行一些配置。实际上我觉得，配置比安装更加重要。
        sudo apt-get install libapache2-mod-auth-mysql php5-mysql phpmyadmin
        执行命令后，等一会就出现一个画面提示：
                    正在设定phpmyadmin
        Please choose the web server that should be automatically configured to run phpMyadmin.
        Web server to recofigure automatically:
            [] apache2
            [] lighttped
        我直接按了回车。

        在等一会，如下提示：
          ┌──────────────────────────┤ 正在设定 phpmyadmin ├──────────────────────────┐
         │                                                                           │
         │ The phpmyadmin package must have a database installed and configured      │
         │ before it can be used.  This can be optionally handled with               │
         │ dbconfig-common.                                                          │
         │                                                                           │
         │ If you are an advanced database administrator and know that you want to   │
         │ perform this configuration manually, or if your database has already      │
         │ been installed and configured, you should refuse this option.  Details    │
         │ on what needs to be done should most likely be provided in                │
         │ /usr/share/doc/phpmyadmin.                                                │
         │                                                                           │
         │ Otherwise, you should probably choose this option.                        │
         │                                                                           │
         │ Configure database for phpmyadmin with dbconfig-common?                   │
         │                                                                           │
         │                    <Yes>                       <No>

        我没有数据库，直接选了yes。然后敲回车。
        之后是：
           ┌─────────────────────────┤ 正在设定 phpmyadmin ├─────────────────────────┐
           │ Please provide the password for the administrative account with which   │
           │ this package should create its MySQL database and user.                 │
           │                                                                         │
           │ Password of the database's administrative user:                         │
           │                                                                         │
           │ _______________________________________________________________________ │
           │                                                                         │
           │                   <Ok>                       <Cancel>
        输入密码，敲回车。
        再然后：
           ┌─────────────────────────┤ 正在设定 phpmyadmin ├──────────────────────────┐
           │ Please provide a password for phpmyadmin to register with the database   │
           │ server.  If left blank, a random password will be generated.             │
           │                                                                          │
           │ MySQL application password for phpmyadmin:                               │
           │                                                                          │
           │ ________________________________________________________________________ │
           │                                                                          │
           │                   <Ok>                       <Cancel>
        仍然是输入密码敲回车。
        之后是确认密码：
                                ┌────┤ 正在设定 phpmyadmin ├─────┐
                                │                                │
                                │                                │
                                │ Password confirmation:         │
                                │                                │
                                │ ______________________________ │
                                │                                │
                                │     <Ok>         <Cancel>

        再次输入密码，敲回车。
        好了。装完了。
        在就是配置了。
        sudo cp /etc/phpmyadmin/apache.conf /etc/apache2/sites-available/phpmyadmin
        cd /etc/apache2/sites-enabled/
        sudo ln -s ../sites-available/phpmyadmin
        执行完后，在/etc/apache2/sites-enable/目录下就多了一个phpmyadmin文件，原来是000-default,现在变成了两个。
        之后，重启apache2：
            sudo /etc/init.d/apache2 restart
        出现如下提示：
            * Restarting web server apache2
            apache2: Could not reliably determine the server's fully qualified domain name,
            using 127.0.1.1 for ServerName
            ... waiting apache2: Could not reliably determine the server's fully qualified domain name,
            using 127.0.1.1 for ServerName
                                                                                  [ OK ]


        快完了！
        在浏览器中输入以下网址：
            http://localhost/phpmyadmin
        如果出现了phpMyAdmin的登录界面，则表示配置成功，接下来就可以对数据库进行操作了。

        哈哈。。。！我终于能用phpmyadmin登录上数据库了。
        以后不动了，没有必要死也不动了。纠结了很长时间终于可以了。
2014/2/10 周一 22：53 165
    ng-class的一个用法：ng-class="{'style1':条件1,'style2':条件2}"
    input在focus一定会有hover，想要focus不受hover的影响，在focus的样式里可以用！important,这是一个方法。
    想要input在focus,没有焦点和hover的时候不晃动：改变边框颜色、改变padding和margin都行。
2014/2/11 周二 21：11 166
    一、昨天说的input晃动的问题，改变边框的颜色是最简单的方法；
    二、引用他人写的组件，没有写单独样式，当想要修改组件里的样式的时候会比较麻烦，最后解决的办法只能在每一个想修改的地方单独加样式，
    还有一种是传参，但是这也会对其他调用组件的地方有影响，需要在js里判断，只有设定了参数就进行一些操作，否则不做任何处理，这样也不会影响现有的
    是有该组件的地方的样式；
    三、使用tooltipster做弹出框的时候，按钮的样式都一样，提示的文字不同时，可以在生成弹出框之前用js改变文字内容，然后就可以使用一个模板了；
    四、遇到一个问题，修改用selectize美化过的input的样式，当输入自定义的标签的时候想修改它弹出的一个东西的文字内容。我的想法是用js修改
    element的html，其实这种想法不太对，首先应该看有没有原生的方法，没有办法才自己写一些东西。
2014/2/12 周三 21：42 167
    一、修改使用tooltipster做的弹出框的位置时，可以使用offsetX和offsetY来进行微调；
    二、想要在Chrome里页面上展示10px的字，而Chrome支持的最小字体是12px，原来使用的方法：
            .example {
                -webkit-text-size-adjust: none;
                -webkit-transform: scale(0.83);
                font-size: 10px;
            }
        这样可以，但是实际上字体还是12px，只是把它进行了缩放；但在FF和Safari里设置字体为10px，他就是10px，这样的话上面的方法就会出问题，在其他
        浏览器里，字体就更小了。
        解决方法：
            @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
                .example {
                    -webkit-transform: scale(0.83);
                    font-size: 10px;
                }
            }
        这样，FF和Safari就没有问题了。
    三、使用selectize实现的标签输入框，修改输入自定义标签时弹出的提示的内容：
        1.最笨的方法：修改源码，在selectize.js里修改；这种方法不行。
        之后尝试的方法：
            在selectize配置时使用onDropdownOpen对其进行配置，在函数中用jquery修改；
            onDropdownOpen: function() {}
            _selectize.open("dropdown_open", function(){}
            _selectize.on("keydown", function(){}
        都不到效果。
2014/2/13 周四 21：53 168
     遇到一个奇怪的问题：
        一个button使用jquery里的splitbutton实现。它的下拉框中有三个item；
        在页面中item的内容类似如下：
            <div>
                example
                <div>other text</div>
            </div>
            在浏览器中第2和3个都是两行；我该成
            <div>
                example<div>other text</div>
            </div>
            浏览器里就都是一行了，什么原因不知道。
            还有，也涉及到修改它的focus样式，不想要悬停样式影响了它，也要一同修改。

    修改selectize的input的问题，解决办法：
        在配置的时候有一个render，在其中把js源码的里面包含文字的那个option_create里的内容覆盖掉就行了。
2014/2/14 周五 21：02 169
    url里对非us-ascii文本字符的处理：
    一、高位字符集：ISO8859-1、CP850，
        西欧语言体系Windows1252，
        东欧和中欧ISO8859-2、CP852、Windows1250，
        俄语KOI8-R、Windows 1251
        结果：不兼容，计算机之间的文件交换困难
        诞生Unicode，太大
        改进版UTF－8，可变宽带编码方式
        可以表示非us-ascii，但服务器不知道编码方式同样不能解析出正确的url；
        大多数浏览器方法：路径部分内部转码（UTF－8甚至ISO859-1；）查询字符串按照当前页面的编码方式转换
    二、IDNA（International Domain Names in Applications,国际化域名）
        RFC 3490描述：字母、数字、横线编码Unicode
        RFC 3492方法：应用在DNS，Punycode
            xn--[us-ascii部分]-[经过编码的Unicode数据]
        主机名中包含非us-ascii字符，转成Punycode再DNS解析，缺陷：不是特别容易读懂，容易出错；字符样子像，编码不同，解析出来就乱了。

    透明度的样式：
        .example {
            opacity: 1.0;
            filter:alpha(opacity=100);
        }
    修改placeholder的方法：
    input.example::-webkit-input-placeholder {}
    input.example:-moz-placeholder {}
    input.example::-moz-placeholder {}
    input.example:-ms-input-placeholder {}

    .example {box-shadow:1px 2px 3px red;}
    1px代表x方向上的平移1px，正数是向右负数是向左；
    2px代表y方向上的平移2px，正数是向下负数是向上；
    3px是模糊值；

2014/2/17 周一 20：55 170
    一个关于修改placeholder的问题，不是
        input.example::-webkit-input-placeholder {}
        input.example:-moz-placeholder {}
        input.example::-moz-placeholder {}
        input.example:-ms-input-placeholder {}
    中修改字体没起作用，可能是因为font-family不知道被哪个css覆盖了，
    在指定一次，它就会去依次查找有没有这种字体，然后就和输入的字是同一种字体了。
2014/2/18 周二 21：24 171
    在一个html页面里调用js函数：
        onclick="example.test()"
    在js文件中写成：
        var example = function() {},console里有错误；
    写成：
        function example()
    就没错。
    这两种函数声明方式应该是一样的，第一种是声明一个函数然后赋值给了一个变量，第二种是直接声明了一个函数。
    今天看到的区别可能是这样：
        var方式的是运行时定义，而function方式的则是编译实运行的。
        <script>
          // Error
          functionOne();

          var functionOne = function() {
          }
        </script>

        <script>
          // No error
          functionTwo();

          function functionTwo() {
          }
        </script>
        其实是这样的：
            var 方式定义的函数，不能先调用函数，后声明，只能先声明函数，然后调用。
            function方式定义函数可以先调用，后声明。
2014/2/19 周三 21：43 172
    命令行里发pull request：
        git pull-request -b git库：分支 -m "提交信息"
    hover父元素时想让它的子元素显示出来，同时又能悬停在子元素上，可是子元素和父元素有一段间距，当一移出父元素的范围，子元素就消失了。
    解决的办法：
        给子元素外面包了一层，让子元素降级为子元素的子元素，这时新加的元素和父元素紧挨着，肯定能hover上，然后让新加的元素没有边框，没有背景色，就像没有它一样；
        这是一种，其他的可能还有是增加父元素的高度，应该也能解决，只是不太好。
2014/2/20 周四 21：07 173
    js里函数的写法：
        var example = function() {}();
        我之前写成了var example = function() {}
        结果在调用的地方得不到想要的效果；
        有不写后一个括号的，但是会在其他地方有处理。

    一些效果以为样式能搞定，其实不行，这时候就要考虑js的事件了。原则上是能用css写就用样式写。
2014/2/21 周五 23：28 174
    ie8下没有placeholder的地方可以用下面的方法试一下：
        if（jQuery.placerholder && element.find(‘input[placeholder],textarea[placeholder]’).size()）{
        	jQuery.placeholder.shim({selector: element.find(‘input[placeholder],textarea[placeholder]’)})
        }
        类似的方法，shim是一个jquery的插件，可以扩展jquery的功能。

    另外一个ie8样式的hack：
        属性名：属性值\9;
        属性名：属性值\0;
2014/2/24 周一 21：31 175
    select2实现的一个下拉列表中，可以使用如下的方式更改输入框中标签的背景色：
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#ffffff', GradientType=0);
2014/2/25 周二 21：24 176
    可以使用localstorage来存一些东西的页面里：
        保存：localStorage.setItem('item name',JSON.stringify(item));
        读取：JSON.parse(localStorage.getItem('item name') || {});

    jquery的each循环,要实现break和continue的功能：
        break，结束整个循环----用return false;
        continue，结束本次循环，继续下一次循环 --用return ture;﻿
2014/2/26 周三 21：17 177
    example：hover {}这样定义的样式在ie8下没有起作用；
2014/2/27 周四 21:41 178
    select2美化的input中再ie8下的背景色可以通过设置.select2-container .select2-choice .select2-arrow 的filter：none
    来使filter不起作用，覆盖select2的css文件里的filter样式.

    jquery插件基础：
        (function($) {
            var default = {...};
            $.fn.myplugins = function(options) {
                var extend = $.extend(default, options);
                //code to do
            };
        }( jQuery ));
    我看到的只是一个最简单的写法，每一行没有弄懂！

    haml基础写法：
        一、层级通过两个空格表示：
            .example
            __.example-child-element //__在此表示两个空格
        二、默认是div，要写明可以使用‘%’ + ‘label-name’:
            .example 和
            <div class="example"></div>等价；
            %span 和
            <span></span>
        三、行内样式的一种写法：
            .example(style="属性名：属性值")
        四、css和js
            ：css
              .example {
                //style
              }

            :javascript
              //js code

            用script包起来的js代码不用空格缩进，保留它原本的格式就行了。
         五、几个特殊的：
            {if 条件}code{/if}
            {for}
            {foreach}
            {include}
            如果可以在一行写就行，不用用其他的东西包起来。
2014/2/28 周五 178（周日 16：27）
    ie8下透明度设置：
        .example {
            opacity：a；
            filter： alpha(opacity = a*100); //可以单独写，没有必要非得写在一起，这样写只是因为他们针对的浏览器范围不一样
        }
        是不起作用的，要使用如下方式：
        .example {
            filter: progid:DXImageTransform.Microsoft.Alpha(opacity=a*100);
            /*IE6、IE7和IE8下*/
            -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(opacity=a*100)";
            /*仅在IE8下有效 */
        }
        可是，使用在ie8下起作用的filter时，元素中文字的字体有时候会变，所以当悬停是改变透明度，会遇到这样的问题。
2014/3/2 周日 20：48
    在js文件中，想声明一个元素（一段html代码）：
        var example = "<div>" +
                        "<p>this is a test</p>" +
                      "</div>";
        没注意到些错了，因该这样写：
        var example = $("<div>" +
                        "<p>this is a test</p>" +
                      "</div>");
        虽然这样写在js文件中不是太好，不好控制这些元素，可是有时候这样写会方便一点，尤其是想动态的修改DOM树的时候。
2014/3/3 周一 22：37 179
    select2里的分组展示的option怎么实现？
    ng-model?

    向一个html中添加css类的时候，命名非常重要，要考虑它的周围范围内的类，命名要和环境相符合；但是，遇到比较糟糕的命名的时候，要给出符合范围的命名，不要太大。
    比如：
        对于一个ul中的各个li添加类时(如下的结构)，
            <div>
                <ul>
                    <li></li>
                </ul>
                <ul>
                    <li></li>
                </ul>
            </div>
        如果li中类叫做items，就相对有点大了；其实ul中的类叫做items更合适。

    引入sass后，如果没有配置好环境，每当sass文件发生变化，总要重新编译一次。
2014/3/4 周二 22:11 180
    做一个小demo的步骤：
        我的习惯是先把html和css写的差不多，然后再去写js的交互。
        重要的是想清楚，没做完的话并不是特别重要！
        想清楚了再做。
2014/3/5 周三 21：34 181
    做一个todo的demo的框架的步骤：
     1894  mkdir todo
     1895  cd todo
     1896  yo --help
     1897  yo webapp
     1898  ll
     1899  bower search storejs
     1900  bower search store-js
     1901  bower install store-js --save
     1902  git init
     1903  gst
     1904  git add .bowerrc .editorconfig .gitattributes .gitignore .jshintrc Gruntfile.js app bower.json package.json test
     1905  gst
     1906  vi .gitignore
     1907  gst
     1908  git add .gitignore
     1909  gst
     1910  gc -m'my todo init'
     1911  grunt serve
     1912  ll
     1913  gst
     1914  git add app/index.html
     1915  gc -m'basic html'
     1916  ll app/bower_components/store-js/store.js
     1917  gst
     1918  git add app
     1919  gstg
     1920  gst
     1921  gc -m'todo add item feature'
     这需要安装其他的一些东西。
     至少yo这条命令在终端里就不认识，因为没有装。
     详细的情况：http://yeoman.io/

     restful(Representational State Transfer,具象状态转移):
        1.RESTful架构，就是目前最流行的一种互联网软件架构；
        2.资源：网络上的一个实体，或者说是网络上的一个具体信息。可以用一个URI（统一资源定位符）指向它，每种资源对应一个特定的URI；
        3.表现层：把"资源"具体呈现出来的形式，叫做它的"表现层"（Representation）；URI应该只代表"资源"的位置。它的具体表现形式，
        应该在HTTP请求的头信息中用Accept和Content-Type字段指定，这两个字段才是对"表现层"的描述；
        4.状态转化：
            四个表示操作方式的动词：GET、POST、PUT、DELETE，它们分别对应四种基本操作：GET用来获取资源，POST用来新建资源
        （也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。
        (from:http://www.ruanyifeng.com/blog/2011/09/restful.html)
2014/3/6 周四 21：10 182
    渐变背景：
        父级元素：background-image:-webkit-linear-gradient(to bottom, #ffffff, #f2f2f2);
        background-image:linear-gradient(to bottom,#ffffff,#f2f2f2);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2', GradientType=0);
        这样在ie8和Chrome下都能看到渐变的背景，可是在ie8下有点问题，如果下面的元素有一个margin-top为负数的值，那么他会被背景遮住，看不到了；
    解决的办法：
        子级元素：
            position：relative;
            z-index: 大一点的数;

    在scss文件下写一个chrome中字体小于12号字体的东西，代码是一样的；
    遇到的问题：

    @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
      .example {
        .child-element {
            display: block;
            font-size: 10px;
            -webkit-transform: scale(0.83);
        }
      }
    }
    这时候它的子元素想距离右边框几个像素，可是它的父亲元素已经到了边上了；通过margin什么的不行，而padding又不能是负的，
    我的一个解决办法：
        让子级元素position为relative就好了，然后通过top和left来调节位置。
2013/3/7 周五 183 （周日 10：38）
    ie8中不支持透明度的写法：
        .example {
            opacity：a;
            filter: alpha(opacity=a*100);
        }
    可以使用以下方法：
        .example {
            background-color: rgba(0, 0, 0, 0.7);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#b2000000, endColorstr=#b2000000);
        }
    想要达到hover改变透明度的效果的时候：
        .example:hover {
            background-color: rgba(0, 0, 0, 1.0);
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#b2000000, endColorstr=#b2000000);
        }
        如果只是把filter设置成none，在ie8下文字的字体可能会变的不同，导致hover前和hover后字体明显不一致，影响用户体验。

    关于position的一点东西：
        使用position为absolute的时候最好在它的父亲元素中写上：
            position: relative;
        否则，position为absolute的元素会一直向上找relative元素来定位，直到html标签。

        所以，最好还是成对使用，成对并不是说要一对一，而是absolute的上层元素，当然最好是父亲元素是relative。
        ps: relative尽量不要和top、left一起使用，可能是不好控制，要使用margin-top、margin-left来控制位置。

        一般用到的地方：
            tab标签的定位、带三角的一个矩形框、下拉列表、还有一些固定位置的header或者footer的定位。
2014/3/10 周一 21：43 184
    如果一个input的样式如下：
        input.example {
            ...
            height: 20px;
            ...
        }
    没有设置行高，在chrome下输入的内容是垂直居中的，因为chrome会给出一个默认的行高；
    不考虑padding什么的，设置20px的行高，文字没有垂直居中；
    可是它在ie8下总是没有垂直居中，要给它一个在ie8下识别的hack（块级hack）：
        @media \0screen {
            input.example {
                ...
                line-height: num;
                //num greater than 20px
                ...
            }
        }
    如果用css写可以不用，可以写成如下(行级hack)：
        input.example {
            ...
            height: 20px;
            line-height: num\0;
            ...
        }
    但是，使用scss就必须要使用上一种方法，scss不识别这些\,*,_等等这些hack标志，编译出的css达不到想要的效果。

    开始学习bootstrap，得先安装，把步骤记录下来，每一步中用到的东西也不认识：
    一、安装npm
        想装bootstrap,要使用bower，而bower要使用npm来安装管理，没有npm只能先安装了。
        npm简介：
            node package manager，node包管理器。
        安装：
            sudo apt-get install npm
        详情：https://www.npmjs.org/
    二、安装bower
        bower是一个包管理工具。
        全局安装：
            sudo npm install -g bower
        报错：
            Error: failed to fetch from registry: bower
            暂时没有解决办法。
            我试了一下apt-get：
            sudo apt-get install -g bower
            E: 未知的命令行选项“g” [来自 -g]
            sudo apt-get install bower
            E: 未发现软件包 bower
2014/3/11 周二 21：26 185

    npm配置了一下库：
        npm config set registry http://registry.npmjs.org/
    然后：
        sudo npm install -g bower
    报错：
        Error: No compatible version found: bower
    暂时放弃。
    直接把bootstrap的源码或者dist文件放在项目目录下就能用了。

    遇到的一个问题：
        浏览器窗口小于页面内容的时候，页面上会出现滚动条；
        如果拖动浏览器窗口回到比较大的尺寸，没有问题；拖动滚动条，当页面的内容区域外的背景色不是白色的时候，会出现不想看到的白边。
        原因是：
            在一个元素里面设置的宽度比更里层的元素的width值小，所以出现了滚动条，能拖动。
        给一个元素的宽度赋值时要谨慎。

    今天用haml写页面的感觉：
        只是写一个登录的界面，两个input，我用了太多的float，因此使用了太多的clearfix；
        对于行内元素，可以使用display：inline-block来代替使用float的方法来布局。

    ！important在ie8下也是识别的。
2014/3/12 周三 22：45 186
    css的命名尽量不要和业务有关系，而要和结构有关系；
    这一点，是牛人告诉我，然后我也在实际写的时候多少有点体会的。
    当两个页面中的内容在视觉上看着很相似的时候，如果想重用样式，就会因为之前写的类名和业务关系太过于紧密而没有办法重用，
    只能重新取一个名字，然后把代码贴过来在调一次，这绝对不是一个愉快的过程！

    降低了开发的效率，重复了之前的工作。

    还有一点，就是margin-left、margin-right之类的东西，确实是每一条都是一句说出来却不愿意遵守的承诺！
    尤其是关注它在多个浏览器中的表现的时候（其实更多的是在chrome和ie8下的表现）。

    最后一点，重构是必须的。
    尤其是在代码结构或页面结构本来就不是很好的时候。

    换一种引入bootstrap的方式：

    一、安装yeoman
    执行：
        npm install -g yo
    报错：
        Error: No compatible version found: yo
    网上解决方法：
        (1)更新node
            sudo apt-get install node -y
            Yeoman需要Node的版本号大于等于0.8；
            依然报错：
                npm ERR! Error: No compatible version found: yo
                npm ERR! No valid targets found.
                npm ERR! Perhaps not compatible with your version of node?
        (2)另一种更新的方法
            sudo add-apt-repository ppa:chris-lea/node.js
                结果：public key "Launchpad chrislea" imported
            sudo apt-get update
            sudo apt-get install nodejs -y # newer nodejs package includes npm
            更新nodejs到了目前的最新版本：v0.10.25

            再一次执行:
                npm install -g yo,
            在一次报错，因为没有用管理员的身份去执行：
                sudo npm install -g yo
            成功，
            包括bower和grunt都装好了。
            应该是可以开始了。
2014/3/13 周四 21：20 187
    继续昨天的yeoman。
    装完以后，就可以开始使用了。
    首先，要新建一个文件夹：
        mkdir example
    然后，
        cd example
    再执行下面的命令：
        yo webapp
    这样，一个基本的框架就好了，
    bower会装一些依赖包，不用再去手动的管理这些东西。
    最后，执行grunt serve
    就能在浏览器中看到效果了，之后也可以在页面里引入bootstrap的css和js文件，动手做了。

    可是，我在命令行里，输入如下命令：
        yo webapp
    没有任何反应，yo --help/-v什么的也没反应。
    原来是少了一个叫generator的东西。
    执行：
        sudo npm install -g generator-webapp
    在执行yo webapp
    仍然没有反应。
2014/3/14 周五 22：39 188
    关于jasmine测试的一点概念：
        测试的时候，总会涉及到一些外部函数或其他方法的引用，我们既不好控制这些方法和函数，也不能因为测试而去修改甚至破坏它的代码，
    因此，我们要在测试中引用这些方法或者函数的地方，给一个假的，方便我们控制，又能完成测试还不会影响到其他的代码。
        这是要用到stub或者mock，这里只是一些我第一次听到然后自己理解的。
        stub:
            中文意思是存根、树桩；
            它是在依赖函数被调用的时候，在测试中模拟一个类似的方法出来，但是结果就不是了，结果是我们可以控制的。
        mock：
            中文意思虚假、愚弄；
            mock做的事是：
                使用一个接口来描述这个对象；
                在产品代码中实现这个接口；
                在测试代码中实现这个接口；
                在被测试代码中只是通过接口来引用对象，
                所以它不知道这个引用的对象是真实对象还是mock对象。
        我目前还理解不了，也分不清楚他们的区别，总之他们的作用都是欺骗测试程序，让测试程序以为真的调用了依赖函数，来完成测试。

    css转成scss文件的一条命令：
        sass-convert -F css -T scss source-file-name target-file-path
    这是在源文件目录下执行的。
2014/3/16 周日 10：48
    手动删除了nodejs,再次安装不上了，
        执行命令：sudo apt-get install nodejs；
        结果：nodejs 已经是最新的版本了，实际上并没有装上，
        使用： nodejs -v 查看版本号
            The program 'nodejs' is currently not installed. You can install it by typing:
            sudo apt-get install nodejs
        使用: find / -iname node也没有找到。

    应该是只是删除了一些源文件，没有完全删除。手动删除很多时候都会遇到这样的问题。
    然后，我有去/usr/lib/node_modules下把所有的东西，删除了。

    最后用apt-get卸载：
        sudo apt-get remove package-name
    然后在执行：
        sudo apt-get install package-name(在此处是nodejs)

    接下来：
        sudo npm install -g yo（安装yo）
        安装成功，终于有了，用yo -v可以查看版本号了，原来都没有。
        它应该装上了gurnt和bower，
        查看bower：
            bower -v
            1.3.1
        查看grunt：
            grunt -v

            grunt-cli: The grunt command line interface. (v0.1.13)
            Fatal error: Unable to find local grunt.
        没有装上gurnt,
        手动安装：
            sudo npm install -g grunt-cli
        到新的目录下：
            yo webapp
        成功！
2014/3/17 周一 21：35 189
    关于haml:
        在haml里html实体不识别，例如：在一行haml代码里有&nbsp;，在页面里整个haml就显示不出来。
        另一个，从html到haml的时候，要从里层开始，逐层的往外走，可是还是会出现错误。
        今天的一个问题：好像是把div即嵌套有想把div写在自己里面。

    关于css命名的一个问题：
        布局haml页面时，css命名完以后，整个页面就差不多了，剩下的就是写样式，然后才去写js的交互。
        可是在布局页面的时候遇到了一个问题，就是是不是命名要和业务逻辑没有关系，这样感觉很难呀！
        因为按照布局的所在位置和意义命名，比如：side-bar、nav什么的。可是布局有时候会不太一样，希望样式能重用，可是很多时候
    样式是不能重用的。而这些部分的名字又是有限的。这样的话，尤其是像遗留系统什么的，样式很乱。命名也变得很难。
        不是说按照布局位置命名不好，其实是好的，能增加样式的重用性。只是觉得对模板的抽象级别还不够，不能很好的命名和布局。
        这样的痛苦，我不知道是不是比重新采用业务逻辑命名的痛苦更甚。

        我觉得是，应该先按照业务逻辑方式命名，最大程度的把页面的样式做的差不多，然后再去抽象。
        只是个人的感觉。
2014/3/18 周二 21：28 190
    把html改成haml时，出了一点错误，页面中没有显示出任何东西，就把链接的地址改成了example.haml,结果显示出来的是页面的代码。
    其实，浏览器是解析不了的haml的，当然改成haml后就不行了。

    关于jquery的插件的一点东西：
        使用yo生成写jquery插件的框架，一条命令：
            yo jquery
        在插件里，根据想要做的事的范围，把函数或方法挂在不同的地方。
        如果是需要选择dom元素，就把函数或方法写成这样：
            $.fn.example() {};
        如果是像ajax这样全局性的，就写成这样：
            $.example() {}
2014/3/19 周三 21：43 191
    更改tooltipster弹出框的样式的一个方法：
        在生成弹窗的地方,写如下：
        theme: tooltipster-diy example,
        tooltipster-diy可能是清除一些原生样式；
        这样，就能在example里写样式覆盖它原生的样式了。
2014/3/20 周四 22：24 192
    ps切图：
        一、自动选择快捷键 v
        二、切图步骤：
            选中图层；
            在右侧的面板中command＋点选图层；
            command ＋ C；
            command ＋ N；
            command ＋ V；

    改变input的placeholder字体大小（在sass中的写法）,
        input {
          &::-webkit-input-placeholder,
          &:-moz-placeholder,
          &::-moz-placeholder,
          &:-ms-input-placeholder {
            font-size: 10px;
            position: relative;
            left: value;
          }
        ｝

        @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
          input {
            &::-webkit-input-placeholder {
              font-size: 10px;
              position: relative;
              left: value;
            }
          ｝
        }

    今天写页面的一点问题：
        一个来回切的标签的页面，两个div，
        一个使用float和clearfix的方式布局，另一个是用inline-block方式布局，
        在引入了bootstrap后，实际上看是inline-block的方式表现更好一点。
        虽然，两者都需要来设定margin什么的来调整位置。
2014/3/21 周五 （周日21：21 193）
    虚度！
    页面和样式：先实现，后重构。什么时候坐不下去了，就可能会涉及到重构。
2014/3/24 周一 21：33 194
    使用
        @media all and (-webkit-min-device-pixel-ratio:0) and (min-resolution: .001dpcm) {
            .example {
                ...;
                -webkit-transform: scale(0.83);
            }
        }
    来缩放文字，以达到在chrome下也是10号字体的要求；
    可是它会包括它的元素一起缩小，就算审查元素看到的元素是100x40的尺寸，实际上却达不到，
    一种方法是在外面包一层其他的元素，我见到的是缩放文字用了两层span来嵌套的.
    例如：
        html:
            <span class="scale-font-wrapper">
                <span class="scale-font">scale font</span>
            </span>
        style:
            @media all and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: .001dpcm) {
              scale-font-wrapper {
                .scale-font {
                  -webkit-transform: scale(0.83);
                }
              }
            }
2014/3/25 周二 21：40 195
    情景：
        一个按钮，悬停时改变背景的透明度。
        它的结构本来如下：
        %span text of button
        .button(onclick="event()")
        我把背景变化的hover样式放在了span上，因此它挡住了button，不能触发它的事件；
    解决方法：
        用外面一层包住，
        .button-wrapper
            %span text of button
            .button(onclick="event()")
        hover的样式放在wrapper上，用position来定位.button（z-index大一点），这样就能达到效果了。
    这样，就能达到变化的效果也不会影响按钮的事件触发。
2014/3/26 周三 21：48 196
    虚度！！
2014/3/27 周四 21：49 197
    遇到一个奇怪的问题：
        相同的类，在dev和beta版上不一样，可能是没有部署上去吧！
2014/3/28 周五 18:49 198(周日)
    
    一个元素的内容不定，高度不定，在垂直方向上想让每个元素的内容不会重叠在一起的一中怪异的方法：
        margin-top: -10000px;
        padding-top: 10000px;
2014/3/31 周一 21：52 199
    用css写当文字达到一定数目是，用...代替：
        display: block;
        width: 85px;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
    （每一行都是必须的）必须给一个width，这样实现的效果不是根据字节来的，而只是当宽度盛不下文字时用...代替了。
    如果是行内元素,block是必需的。

    另外，使用display: inline-block;也可以，只是inline-block不好控制在行内的位置，不如block好控制，给margin或padding什么的整行都会变动。
2014/4/1 周二 22：11 200
    在标签上有绑定事件（像onclick什么的）的时候，最好不要用span而要用a代替。
    因为如果使用span的时候，在元素上连续click，它就会一直触发事件，cpu的使用率持续上升，很快就到达100%；
    而使用a就没有这样的问题，它不会一直去触发事件。
2014/4/2 周三 21：54 201
    在用angular写的html模板中，想要一个textarea中保持它的内容的格式，可以用下面的方法：
        ng-bind-html="内容 | space"
    的确是起作用了。

    phpstrom7试用版过期的解决办法：
        cd
        cd Library
        cd Caches
        rm -rf WebIde60
        rm -rf WebIde70
        rm -rf com.jetbrains.PhpStorm
        rm -rf WebIde70
        cd
        cd Library
        cd ..
        cd Library/Application\ Support
        rm -rf WebIde*
        cd ..
        cd Preferences
        open com.jetbrains.PhpStorm.plist
        cd WebIde70
        cd eval
        cat PhpStorm7.evaluation.key
        cd ..
        rm eval/PhpStorm7.evaluation.key
    其实是一个删除本地机器存储的可能存有相关的过期信息的文件，最后好像没起作用，可能是另有其他的信息；
    最后是找了一个注册码。

    在一个文字展示区中，都是英文和数字，且中间没有空格和回车，结果文字在页面上就呈现一行，很长很长。没有换行，加一个属性就可以了：
        word-break: break-all;
2014/4/3 周四 22：39 202
    我对于git库的使用的习惯：
        我的习惯慢慢趋向与每个比较大的demo或特殊的demo单独建一个库，小的就可以多个作为一个库，
        在我的本地都存在同一个文件夹下，但这个文件夹不是任何一个库。

    一个问题，当一个人只写样式和页面，而另一个人写js功能的时候，一般的样式还好说，可是在用js去交互的时候用到的类会麻烦一点，
    而且一但改了样式和结构，尤其是结构，有些功能会受影响，因此这样的方式不是一个很好的做法；但短期内可以去用来锻炼一方面的能力。
2014/4/4 周五 22：21 203
    .example {
        width: 100px;
        height: 100px;
        overflow: scroll;
        position: relative;
        b {
            width: 10px;
            height: 10px;
            background: url(example.png) no-repeat 0 0;
            position: absolute;
            top: -10px;
            left: 50%;
        }
    }
    在类似的一个结构中，因为example加了scroll这一属性，结果它的内容虽然不会超出去，可以在限定范围内滚动，而b却显示不出来了，是个问题！
    我的解决办法是在包一层。
2014/4/8 周二 21：33 204
    一个关于span样式的问题：
        在同一个div中的span有相同的样式；
        haml模板：
            .example
              .example-span text
        scss文件：
            .example {
              position: relative;
            }
            .example-span {
              ...
              display: inline-block;
              margin-left: 10px;
              ...
            }
        可是每个span因为文字内容不同，他们的长度不一样，表现出来的到.example的左边的距离不一样；
        最后的解决办法：
            给.example-span加一个长度，再去调整它们到左边的距离
2014/4/9 周三 21：36 205
    ie8的line－height ==> 盒式模型的问题.

    关于line-height的问题：
        在chrome下
            .example {
                ...
                height: 20px;
                line-height: 20px;
                ...
            }
        文字就能垂直居中了；
        在ie8下，line-height要比20大几个像素才能垂直居中，以类似hack的方式可以让文字在垂直方向上居中，
        可是要写一些重复的代码，个人感觉不太好，暂时没有其他方法，也只能这样；

        可是如果是input就不太好用了；
        在input里有文字和没有文字，光标会上下晃动，不知道怎么解决；
        网上的一种方法：
            给input一个小一点的height然后用padding-top和padding-bottom来填充，没起作用；


    .element {
        ...
        width: content-width;
        height: content-height;
        ...
    }
    W3C的盒式模型：
        element-width = padding-left + padding-right + border-left + border-right + content-width;
        element-height = padding-top + padding-bottom + border-top + border-bottom + content-height;
    IE的盒式模型：
        element-width = content-width;
        element-height = content-height;
    这样写样式的时候，不给行高做特殊处理，在ie8下就可能出现上面的问题。
2014/4/10 周四 22：04 206
    还是关于昨天的line-height的问题：
        最后的解决办法，给ie8写了一个hack，有line-height/height/padding-top搭配使用，来达到文字在垂直方向上的效果；
    有一点问题，就是在xp虚拟机中用ie8查看的时候，input在有没有文字的时候光标会上下错动，可是在另一个window7虚拟机中用ie8查看，却没有这样的问题。

    一个问题，就是虚拟机终究不是真实的环境，要想兼容ie还得是真实的环境，真实的ie浏览器。
2014/4/11 周五（周日 22：43 207）
    之前的用line-height/height/padding-top搭配使用的方法不是一种好的方法，还是要用比较正规一点的方法才行。
        #example[type='text'], #example[type="text"]:focus {
            height: 32px;
            line-height: 32px;
            font-family: "Arial", "SimSun", "宋体";
            padding: 0;
            vertical-align: middle;
        }
        为什么要改变font-family,因为默认给的微软雅黑字体不太合适。
    可实际上仍然没有解决这个input中有没有文字的时候光标会上下错的问题，连百度和google在ie下的输入框都有问题，
    当然也能解决，只是要用js去动态改变元素的类。
2014/4/14 周一 21：45 208
    font: 12px/1.5;
    这种写法和
    font-size: 12px;
    line-height: 1.5;
    相当。

    box－sizing相关的一点知识：
        .example {
            width: 100px;
            height: 50px;
            padding: 10px;
            margin: 20px;
            border: 30px solid #ccc;
        }

        W3C标准：
            外盒尺寸：
            example width = width + padding-left + padding-right + border-left + border-right + margin-left + margin-right;
            (example width =  100 + 2x10 + 2x30 + 2x20 = 220)
            example height = height + padding-top + padding-bottom + border-top + border-bottom + margin-top + margin-bottom;
            (example height =  50 + 2x10 + 2x30 + 2x20 = 170)
            内盒尺寸：
            example width = width + padding-left + padding-right + border-left + border-right;
            (example width =  100 + 2x10 + 2x30 = 180)
            example height = height + padding-top + padding-bottom + border-top + border-bottom;
            (example height =  50 + 2x10 + 2x30 = 130)
        IE6以下标准：
            外盒尺寸：
            example width = width + margin-left + margin-right;
            (example width =  100 + 2x20 = 140)
            example height = height + margin-top + margin-bottom;
            (example height =  50 + 2x20 = 90)
            内盒尺寸：
            example width = width;
            (example width =  100)
            example height = height;
            (example height =  50)

        box-sizing语法：
            box-sizing ： content-box || border-box || inherit
            content-box:此值为其默认值，其让元素维持W3C的标准Box Model(content-box-width = 220;content-box-height = 170)；
            border-box:此值让元素维持IE传统的Box Model（IE6以下版本）(border-box-width = 100;border-box-height = 50)；
        作用：
            1、拯救布局
                使用border-size来防止padding\border撑破父级元素；
            2、统一form元素的风格
            (1)[type="submit"]、[type="reset"]、button、[type="text"]、select、textarea默认情况下都带有2px的border;
            (2)[type="submit"]、[type="reset"]、button默认情况下会有6px的左右padding；height在mac系统下会比在winxp win7系统下少1px,
               只有16px,（12px的字体时高度为17px）;
            (3)[type="text"]默认情况下会有1px的上下padding；WinXP和Win7下高度为15px，Mac系统下为14px
            (4)[type="checkbox"]默认情况下会有margin：3px 3px 3px 4px,并且宽/高度默认为13px(IE6，IE7默认大约是15px，Mac系统下只有9px)
            (5)[type="radio"]默认情况下会有margin: 3px 3px 0 5px的外边，并且宽/高度默认为13px（IE6,IE7默认大约是15px,Mac系统下只有9px）
            (6)textarea默认情况带有1px的上下margin；
2014/4/15 周二 209
2014/4/16 周三 21：42 210
     %a.btn-blue-small(onclick=" " href="javascript: {}")
         %span.scale-font-wrapper
              %span.scale-font 提交
    默认／hover／active三种背景，在chrome下没有问题，在ie8下active时背景img没起作用，原来是受了
     %span.scale-font-wrapper
        %span.scale-font 提交
    的影响，实际上点的是span，span没有active

    IE8，IE9以及IE10，都是不支持从子元素触发:active的（不向上传播）。这个问题亦存在于Opera，但只有在子元素为display:block时才触发。
    解决办法：
        避免在CSS按钮下增加占用大面积的元素（Twitter Bootstrap的icon很小，所以问题不明显）；
        用“类”代替“伪类”，再用Javascript补救缺失的事件。
2014/4/17 周四 22：07 211

    jquery.html5-placeholder-shim.js插件在ie8下如果是动态生成的input和textarea要显示placeholder要手动调用一下：
    jQuery.placeholder.shim({selector:’#example’});

    使用a标签模拟的按钮，如果内部有span元素，在ie下active会受影响，样式不能正确显示；
    换一种方式实现，用button，在ie下会有背景错位的问题，背景图片会向左上方分别移动2px，用background-position可以调整过来，
    只是在点击后移开或双击时有问题，背景图会一闪一闪的。
2014/4/18 周五 22：06 212
    纯样式button：
    .example {
      background: -webkit-linear-gradient(top, #1e84cf, #165db2);
      background: -moz-linear-gradient(top, #1e84cf, #165db2);
      background: linear-gradient(top, #1e84cf, #165db2);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#1e84cf', endColorstr='#165db2', GradientType=0);
      &:active {
        background: -webkit-radial-gradient(center, ellipse, #078dd9, #0e48a4);
        background: -moz-radial-gradient(center, ellipse, #078dd9, #0e48a4);
        background: radial-gradient(center, ellipse, #078dd9, #0e48a4);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#078dd9', endColorstr='#124ca6', GradientType=0);
      }
    }
    有个问题，就是放射渐变在ie下的问题：
        IE的渐变滤镜不支持中间颜色点，不支持自定义渐变角度和放射渐变。这意味着你只能使用指定水平/垂直、线性、并且只有起始和终点两色的渐变。
    苹果官网的一个按钮样式：
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#f0f0f0",endColorstr="#d6d6d6");
        background: -webkit-gradient(linear,left top,left bottom,from(#f0f0f0),to(#d6d6d6));
        background: -moz-linear-gradient(top,#f0f0f0,#d6d6d6);
        background-image: -o-linear-gradient(top,#f0f0f0 0,#d6d6d6 100%);
        background-image: linear-gradient(to bottom,#f0f0f0 0,#d6d6d6 100%)
2014/4/20 周日 8：33 213
    这两天装了win7装linux，遇到一些问题；
    1.linux下没有文件或者目录：
        No such file or directory: '/home/wupeng/.bashrc'
    在/home/wupeng的目录下新建一个文件就好了
    2.安装phpstorm必须要现安装openjdk-7-jdk;
    3.安装mysql的时候没有输入密码，结果要在phpmyadmin的config.inc.php里加上
        $cfg['Servers'][$i]['AllowNoPassword'] = 'true';
    4.安装yo
        sudo apt-get install nodejs;
        sudo apt-get install npm;
        sudo npm install -g yo;
            报错：Error: failed to fetch from registry: yo

        装的nodejs不对，
        先卸载：sudo apt-get remove nodejs --purge
        然后从node官网clone下来，编译安装：
            cd ./configure
            sudo make install
            报错：
                flock: g++: No such file or directory
                make[1]: *** [/home/wupeng/Project/install/node/out/Release/openssl-cli] Error 69
                make[1]: Leaving directory `/home/wupeng/Project/install/node/out'
                make: *** [node] Error 2
            我认为是没装g++；
            安装g++:
                sudo apt-get install g++
            然后是在重新来一次；
                sudo make
                sudo make install
                可以了，之后装npm，装yo，
                可以查看yo的版本，bower的版本，
                grunt还得另装：
                sudo npm install -g grunt-cli;
                可是使用yo webapp的时候总是不行，报错：
                    npm ERR! Error: EACCES, mkdir '/home/wupeng/tmp/npm-3600-i8WtX-77'
                    npm ERR!     at Error (native)
                    npm ERR!  { [Error: EACCES, mkdir '/home/wupeng/tmp/npm-3600-i8WtX-77']
                    npm ERR!   stack: 'Error: EACCES, mkdir \'/home/wupeng/tmp/npm-3600-i8WtX-77\'\n    at Error (native)',
                    npm ERR!   errno: -13,
                    npm ERR!   code: 'EACCES',
                    npm ERR!   path: '/home/wupeng/tmp/npm-3600-i8WtX-77',
                    npm ERR!   parent: 'test' }
                    npm ERR!
                    npm ERR! Please try running this command again as root/Administrator.
                sudo yo webapp;
                    报错：
                    Since yo is a user command, there is no need to execute it with superuser
                    permissions. If you're having permission errors when using yo without sudo,
                    please spend a few minutes learning more about how your system should work
                    and make any necessary repairs.

                    A quick solution would be to change where npm stores global packages by
                    putting ~/npm/bin in your PATH and running:
                    npm config set prefix ~/npm
                修改权限：
                一、可以使用命令chmod来为文件或目录赋予权限。
                    Linux/Unix的档案存取权限分为三级:档案拥有者、群组、其他。利用chmod可以藉以控制档案如何被他人所存取
                二、详解
                1此命令有两种使用方法，一种是chmod后加数字，后接文件名
                chmod abc file
                其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。
                r=4，w=2，x=1
                若要rwx属性则4+2+1=7；
                若要rw-属性则4+2=6；
                若要r-x属性则4+1=5。

                修改了tmp文件夹的权限就行了；
                sudo chmod 777 tmp

                在次执行yo webapp就可以了；
                在grunt serve的时候不行，报错
                    Warning: Loading "sass.js" tasks...ERROR
                    >> Error: Cannot find module 'each-async'
                    Warning: Task "sass:server" not found. Use --force to continue.
                没有sass，要装sass，装完后发现没有ruby，在去装ruby。
                安装ruby：sudo apt-get install ruby

                在装sass：
                    sudo gem install sass;
                grunt serve仍然报错：
                    Loading "sass.js" tasks...ERROR
                    >> Error: Cannot find module 'each-async'
                npm list:
                    把红色的单独装一下
                    sudo npm install -g node-sass;

                都还是不对，擦的。
                都看了一下其他需要的东西，在执行了一下grunt serve：
                    Loading "Gruntfile.js" tasks...ERROR
                    >> Error: Cannot find module 'lodash'
                sudo npm install -g lodash之后也不行。


                实在搞不了了，全部手动删除，然后卸载node。

                卸载node：
                    安装Node.js
                    Download        $ lynx http://nodejs.org
                    Extract
                        $ tar zxvf node-vNN.tar
                        $ cd node-vNN
                        Configure        $ ./configure --prefix=/usr/local/node ,#默认安装位置
                        Compile        $ make
                        Install        $ sudo make install
                        Test        $ node -v
                    卸载：
                    　　＃sudo make uninstall （干掉make install命令时装进去的文件,需要管理员身份)
                    　　只删除make时产生的临时文件：
                    　　＃make clean
                        同时删除configure和make产生的临时文件
                        # make distclean
                    升级Node版本：
                        直接下载源码重新编译，安装。（覆盖了旧的版本）

                卸载ruby：
                    sudo apt-get purge ruby*


                重新来过：
                    一、install ruby
                        sudo apt-get install ruby
                    二、install sass
                        sudo gem install sass
                    三、install compass
                        sudo gem install compass
                    四、install nodejs
                        下载源码包；
                        解压:sudo tar zxvf node-v0.10.26.tar.gz
                        编译:sudo make
                        安装:sudo make install

                        新建example.js
                            var http = require('http');

                            http.createServer(function(req, res){
                              res.writeHead(200, {'Content-Type': 'text/plain'});
                              res.end('Hello World\n');
                            }).listen(1337);
                            console.log('Server running at port 1337');
                        运行：node example.js
                        结果：Server running at port 1337
                        在浏览器中输入http://127.0.0.1:1337/
                        可以看到页面输出了：hello world

                        nodejs的环境就算好了。
2014/4/21 周一 22：39 214
    jquery-pjax;
    pushState + ajax = pjax

    继续install npm:
        sudo apt-get install npm
        成功： npm -v ===> 1.4.3
        sudo npm install -g yo bower grunt-cli
        sudo npm install -g generator-webapp
        结果yo -v/bower -v/grunt -v都没有返回结果？？？

        网上一种说法（have to install nodejs in this way）：
            sudo apt-get install python-software-properties
            sudo add-apt-repository ppa:chris-lea/node.js
            sudo apt-get update
            sudo apt-get install nodejs


        git clone https://github.com/yeoman/yo
        Edit the package.json..
            vim package.json
        .. to remove these lines..

            "scripts": {
                "test": "grunt",
                "postinstall": "node ./scripts/doctor",
                "postupdate": "node ./scripts/doctor"
            },
        Then, install it using npm..
            cd yo
            npm install -g
        If you want to clean up you can remove the Yeoman repo..
            cd ..
            rm -R yo/
        完成之后 yo -v仍然没有返回结果！！！
2014/4/22 周二 21：37 215
    在ie下中input文字垂直居中的方法：
        .example {
            ...
            font-size: apx;
            height: apx;
            line-height: apx;
            padding-top: bpx;
            padding-bottom: cpx;
        }
        (b和c不一定相等)
2014/4/23 周三 22：46 216
    node环境没问题，npm没问题，install yo/bower/grunt-cli都没问题，就是装完yo/bower/grunt-cli都不能用，换一种node的安装方式。

    sudo apt-get install python-software-properties
    sudo add-apt-repository ppa:chris-lea/node.js
    sudo apt-get update
    sudo apt-get install nodejs
2014/4/24 周四 22：39 217
    渐变背景：
    background: -webkit-gradient(linear,0% -1%,0% 9%,from(#5a5a5a),to(rgba(255,255,255,0.5))),-webkit-gradient(linear,center top,center bottom,color-stop(40%,rgba(122,122,122,0.6)),color-stop(100%,rgba(255,255,255,0.5)));
    background: -moz-linear-gradient(top,rgba(90,90,90,1) 0,rgba(255,255,255,0.5) 10%),-moz-linear-gradient(top,rgba(122,122,122,0.7) 40%,rgba(255,255,255,0.5) 100%);
    background: -o-linear-gradient(top,rgba(90,90,90,1) 0,rgba(255,255,255,0.5) 10%),-o-linear-gradient(top,rgba(122,122,122,0.7) 40%,rgba(255,255,255,0.5) 100%);
    background: -ms-linear-gradient(top,rgba(90,90,90,1) 0,rgba(255,255,255,0.5) 10%),-ms-linear-gradient(top,rgba(122,122,122,0.7) 40%,rgba(255,255,255,0.5) 100%);
    background: linear-gradient(top,rgba(90,90,90,1) 0,rgba(255,255,255,0.5) 10%),linear-gradient(top,rgba(122,122,122,0.7) 40%,rgba(255,255,255,0.5) 100%);
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(gradientType=0, startColorstr="#d6d6d6", endColorstr="#fff")";
    filter:progid:DXImageTransform.Microsoft.gradient(gradientType=0,startColorstr="#d6d6d6",endColorstr="#ffffff");
    -moz-box-shadow: inset 0 5px 10px -1px rgba(90,90,90,0.5),inset 2px 35px 65px 5px rgba(235,235,235,0.5);
2014/4/25 周五 22:48 218
    ie7/8下background－size不起作用,只在ie9才开始支持。
    兼容IE8的方法：
    /*for ie8 and less*/
        filter: progid:DXImageTransform.Microsoft.AlphaImageLoader( src='images/logo.gif', sizingMethod='scale');
        -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader( src='images/logo.gif', sizingMethod='scale')";
        但是它会缩放到整个元素的大小。如果整个背景还好说，不想要整个元素现实背景图就有问题。

    另一种方法install nodejs:
        一、下载源码包：
            http://nodejs.org/download/
            node-v0.10.26.tar.gz

            Note: Python 2.6 or 2.7 is required to build from source tarballs.

            python -v:Python 2.7.4 (default, Apr 19 2013, 18:32:33)
        二、解压：
            sudo cp -r Downloads/node-v0.10.26.tar.gz /usr/local/src //不行
            sudo wget http://nodejs.org/dist/v0.10.26/node-v0.10.26.tar.gz
            sudo tar zxvf node-v0.10.26.tar.gz
        三、配置
            ./configure
        四、编译
            sudo make
        五、安装
            sudo make install

            cp /usr/local/bin/node /usr/sbin/


            总是有错，要更新一些东西。
            sudo apt-get update报错：
            W: 无法下载 gzip:/var/lib/apt/lists/partial/archive.ubuntu.com_ubuntu_dists_raring_universe_binary-i386_Packages  Hash 校验和不符
            W: 无法下载 gzip:/var/lib/apt/lists/partial/archive.ubuntu.com_ubuntu_dists_raring-updates_main_binary-i386_Packages  Hash 校验和不符
            W: 无法下载 gzip:/var/lib/apt/lists/partial/archive.ubuntu.com_ubuntu_dists_raring-updates_universe_binary-i386_Packages  Hash 校验和不符
            E: Some index files failed to download. They have been ignored, or old ones used instead.

            解决办法:
                可以将目录下/var/lib/apt/lists/partial/所有的文件清掉
                sudo rm /var/lib/apt/lists/* -vf

            没有在去管，继续装yo。
            sudo npm install -g yo报错：
            npm ERR! If you are behind a proxy, please make sure that the
            npm ERR! 'proxy' config is set properly.  See: 'npm help config'
            解决：sudo npm config proxy null



            一直没能用的原因，原来是装好了，只是只建立了一次软连接，可能命令行里不支持~,在建立一次软连接，链接两次就好了。
2014/4/28 周一 21：04 219
    html css
    html5 css3
    haml sass(scss less)
    jade stylus

    z-index和position要搭配使用：
        不设置position只设置z-index是不起作用的，就算z-index更大也会被后面的元素覆盖；
        只设置position,不设置z-index时，元素会被设置了position和z-index的覆盖；
        都设置了,position和z-index都有，元素的z-index大的覆盖小的。
    详情：http://www.neoease.com/tutorials/z-index/
2014/4/29 周二 22：00 220
    在chrome下form中的input的背景色会自动填充上，想要覆盖也不太好，只要在form中添加属性就好了
        <form autocomplete="off">
        ...
        </form>
2014/4/30 周三（周五 8：50 221）
    chrome自动填充表单中input的背景色问题：
        方法1：<form  autocomplete="off"></form>
            没有解决，focus的时候会出现
        方法2：
          input:-webkit-autofill
            -webkit-box-shadow: 0 0 0px 1000px white inset

          It work for me!

        stylus针对ie8的hack写法
          input
            margin-right: 5px
            vertical-align: s("middle\0/")
            margin-top: s("-3px\0/")

        在加入一些响应式设计的js后，media quary就没办法用了，暂时可以用这种方法代替。

        把当前的修改保存，pull后在把保存的现场恢复：
            git stash
            git stash pop


        jeet
        1.什么是jeet？
            人类的布局方式，按照人类理解方式去完成布局，而非按照机器能读懂的方式去布局。
        2.特性：
            （1）灵活性（flexibility）
                jeet基于css预处理器，不用受限于.col-6这样的类，可以传分数、十进制数或者两者的组合来创建完全自定义的网格；
            （2）速度（speed）
            （3）整合（integration）
                jeet可以在很多环境中使用，无论是scss的静态网站、stylus写法的node包或者是Rails应用。只要scss和stylus能工作，
                jeet就能工作。
        3.优势
                        bootstrap(grid)     foundation(grid)    jeet
            开始简单        Y                       Y              Y
            语法灵活        N                       N              Y
            自定义网格       N                      N               Y
            高精度          N                       N              Y
            真实的列        N                       N              Y
        4.开始

            SCSS INSTALLATION
            Install Ruby [ Windows , Mac/Linux ]

            gem install sass
            cd ~/Project
            svn checkout https://github.com/mojotech/jeet/trunk/scss/jeet
            @import 'jeet/index';

            goes at the top of ~/Project/foo.scss


            STYLUS INSTALLATION

            Install NodeJS
            npm install -g stylus jeet
            cd ~/Project
            @import 'jeet'

            goes at the top of ~/Project/foo.styl
        5.API
            column(ratios = 1, offset = 0, cycle = 0, uncycle = 0, gutter = jeet-gutter)
                column是所有grid系统中最强大的功能。指定一个比例（分数、十进制数）
                offset使元素偏移，例如：column(1/4,offset: 1/4)；
                cycle用来显示重复元素；
            span(ratio = 1, offset = 0)
            shift(ratios = 0, col_or_span = column, gutter = jeet-gutter)
            unshift()
            edit()
            center(max_width = 1410px, pad = 0)
                使元素居中，并设置宽度和左右的padding；
            stack(pad = 0, align = center)
                参数为padding和文字居中方式；对移动设备更具有适用性。
            unstack()
                取消stack()；使用之后，不会自动还原调用column的状态，需要在手工调用一次column。
            align(direction = both)
                使用position: absolute来于它们的容器对其，无论是水平居中还是垂直居中，这样在ie9+版本中垂直居中就容易了。
            cf()
                Nicholas Gallagher的清除浮动方式，用来包裹column和span的集合。